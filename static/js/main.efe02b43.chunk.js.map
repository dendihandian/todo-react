{"version":3,"sources":["api.js","config.js","component/InputText.js","component/ListItem.js","component/List.js","component/LoaderHOC.js","component/Modal.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","todosRef","ref","child","InputText","_ref","onChangeText","name","placeholder","onKeyPress","value","react_default","a","createElement","onChange","text","className","autoFocus","ListItem","item","updateToDo","showEdit","deleteToDo","style","textDecoration","status","type","checked","e","id","target","onClick","Loader","loading","WrappedComponent","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","props","Component","data","filterText","filterData","filter","toLowerCase","indexOf","map","component_ListItem","ModalCustom","open","title","children","toggle","reactstrap_es","isOpen","App","_this","call","_e$target","setState","defineProperty","asyncToGenerator","regenerator_default","mark","_callee","update","wrap","_context","prev","next","firebaseRef","t0","console","log","stop","_x","_x2","_x3","modal","todo","showAdd","state","_ref2","_callee2","_context2","remove","_x4","handleSubmit","_ref3","_callee3","_context3","charCode","push","error","_x5","_this2","on","snapshot","items","entries","val","bind","off","_this3","component_InputText","component_List","Modal","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.efe02b43.chunk.js","sourcesContent":["import axios from \"axios\";\nimport * as firebase from \"firebase\";\nimport { firebaseConfig } from \"./config\";\n\n\nconst api = axios.create({\n  baseURL: \"https://randomuser.me/api\"\n});\n\nfirebase.initializeApp(firebaseConfig);\n\nconst databaseRef = firebase.database().ref();\nexport const todosRef = databaseRef.child(\"todos\");\n\nexport const fetchUser = async () => {\n  try {\n    const {\n      data: { results }\n    } = await api.get(\"/?nat=us&results=50\");\n\n    return results.map(user => ({\n      id: user.id.value,\n      name: `${user.name.first} ${user.name.last}`,\n      picture: user.picture.thumbnail,\n      email: user.email\n    }));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default api;\n","export const firebaseConfig = {\n    apiKey: process.env.REACT_APP_FB_APIKEY, \n    authDomain: process.env.REACT_APP_FB_AUTHDOMAIN ,\n    databaseURL: process.env.REACT_APP_FB_DATABASEURL,\n    projectId: process.env.REACT_APP_FB_PROJECTID ,\n    storageBucket: process.env.REACT_APP_FB_STORAGEBUCKET ,\n    messagingSenderId: process.env.REACT_APP_FB_MESSAGINGSENDERID ,\n  };\n  \n  \n","import React from \"react\";\nimport PropTypes from 'prop-types'\n\n\nconst InputText = ({ onChangeText, name, placeholder, onKeyPress, value }) => (\n  <div>\n    <input\n      onChange={text => onChangeText(text)}\n      placeholder={placeholder}\n      value={value}\n      onKeyPress={onKeyPress}\n      name={name}\n      className=\"form-control text-center\"\n      autoFocus\n    />\n  </div>\n);\n\nInputText.propTypes = {\n    onKeyPress: PropTypes.func,\n    value:PropTypes.string,\n    onChangeText: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired \n}\n\n\nexport default InputText;\n","import React from \"react\";\n\nconst ListItem = ({ item, updateToDo, showEdit, deleteToDo }) => {\n  return (\n    <div className=\"row justify-content-sm-between\">\n      <div\n        style={{ textDecoration: item.status ? \"line-through\" : \"none\" }}\n        className=\"col\"\n      >\n        <input\n          type=\"checkbox\"\n          checked={item.status}\n          onChange={e => updateToDo(item.id, item.name, e.target.checked)}\n        />\n\n        {item.name}\n      </div>\n      <button\n        className=\"material-icons ml-1 mt-1 btn btn-sm\"\n        onClick={() => showEdit(item.id, item.name, item.status)}\n      >\n        edit\n      </button>\n      <button\n        className=\"material-icons ml-1 mt-1 btn btn-sm\"\n        onClick={() => deleteToDo(item.id)}\n      >\n        delete\n      </button>\n    </div>\n  );\n};\n\nexport default ListItem;\n","import React from \"react\";\nimport Loader from \"./LoaderHOC\";\nimport ListItem from \"../component/ListItem\";\n\nconst List = ({ data, updateToDo, filterText, showEdit, deleteToDo }) => {\n  const filterData = data.filter(\n    item => item.name.toLowerCase().indexOf(filterText) !== -1\n  );\n\n  return (\n    <div className=\"d-flex flex-column col m-2\">\n      {filterData.map(item => (\n        <ListItem\n          item={item}\n          updateToDo={updateToDo}\n          showEdit={showEdit}\n          deleteToDo={deleteToDo}\n          key={item.id}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Loader(\"loading\")(List);\n","import React, { Component } from \"react\";\nimport \"../component/Loader.css\";\n\nconst LoaderHOC = loading => WrappedComponent => {\n  return class Loader extends Component {\n    render() {\n      if (this.props.loading) {\n        return <div className=\"lds-dual-ring\" />;\n      }\n      return <WrappedComponent {...this.props} />;\n    }\n  };\n};\n\nexport default LoaderHOC;\n","import React from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nexport const ModalCustom = ({ open, title, children, toggle }) => {\n  return (\n    <div>\n        \n      <Modal isOpen={open} toggle={toggle}>\n        <ModalHeader toggle={toggle}>{title}</ModalHeader>\n        <ModalBody>{children}</ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ModalCustom;\n","import React, { Component } from \"react\";\nimport { todosRef } from \"../src/api\";\nimport \"./App.css\";\nimport \"./component/style.css\";\nimport InputText from \"./component/InputText\";\nimport List from \"./component/List\";\nimport Modal from \"./component/Modal\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      todo: \"\",\n      loading: true,\n      id: \"\",\n      filterText: \"\",\n      status: false,\n      error: false\n    };\n  }\n\n  componentWillMount() {\n    this.firebaseRef = todosRef;\n  }\n\n  componentDidMount() {\n    this.firebaseRef\n      .on(\"value\", snapshot => {\n        try {\n          this.items = Object.entries(snapshot.val()).map(item => {\n            return {\n              id: item[0],\n              name: item[1].name,\n              status: item[1].status\n            };\n          });\n\n          this.setState({ data: this.items, loading: false });\n        } catch (error) {\n          this.setState({ data: this.items, loading: false, error: true });\n        }\n      })\n      .bind(this);\n  }\n\n  componentWillUnmount() {\n    this.firebaseRef.off();\n  }\n\n  onChangeText = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  updateToDo = async (id, name, checked) => {\n    const update = {};\n    update[id] = { name, status: checked };\n    try {\n      await this.firebaseRef.update(update);\n    } catch (error) {\n      console.log(error);\n    }\n  };    \n\n  showEdit = (id, name, checked) => {\n    this.setState({ modal: true, todo: name, id, status: checked });\n  };\n\n  showAdd = () => {\n    this.setState({ modal: true, todo: \"\", id: \"\", status: false });\n  };\n\n  toggle = () => {\n    if (!this.state.id) {\n      this.setState({\n        modal: false,\n        todo: \"\",\n        id: \"\",\n        checked: \"\",\n        status: \"\"\n      });\n    }\n    this.setState({ modal: false });\n  };\n\n  deleteToDo = async id => {\n    await this.firebaseRef.child(id).remove();\n  };\n\n  handleSubmit = async e => {\n    if (e.charCode === 13) {\n      try {\n        if (!this.state.id) {\n          this.firebaseRef.push({\n            name: this.state.todo,\n            status: this.state.status\n          });\n        } else {\n          await this.updateToDo(\n            this.state.id,\n            this.state.todo,\n            this.state.status\n          );\n\n          this.setState({ id: \"\" });\n        }\n        this.setState({ todo: \"\", modal: false, error: false });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row justify-content-sm-center align-items-sm-center\">\n          <div\n            className=\"col-lg-5 col-md-5 col-sm-5 d-flex flex-column\"\n          >\n            <div className=\"mt-2 search-input\">\n              <InputText\n                name=\"filterText\"\n                value={this.state.filterText}\n                onChangeText={this.onChangeText}\n                onKeyPress={this.handleSubmit}\n                placeholder=\"search\"\n              />\n            </div>\n\n            <div className=\"col mt-5\">\n              <div className=\"row justify-content-center bg-light\">\n                {this.state.error ? (\n                  \"Data Not Found\"\n                ) : (\n                  <List\n                    loading={this.state.loading}\n                    data={this.state.data}\n                    updateToDo={this.updateToDo}\n                    filterText={this.state.filterText}\n                    showEdit={this.showEdit}\n                    deleteToDo={this.deleteToDo}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <Modal open={this.state.modal} title=\"To Do\" toggle={this.toggle}>\n          <InputText\n            name=\"todo\"\n            value={this.state.todo}\n            onChangeText={this.onChangeText}\n            onKeyPress={this.handleSubmit}\n            placeholder=\"Add Todo\"\n          />\n        </Modal>\n\n        <i\n          className=\"material-icons display-4 add-button\"\n          onClick={() => this.setState({ modal: true })}\n        >\n          add_circle\n        </i>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}